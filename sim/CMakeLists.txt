PROJECT(sim)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

FIND_PACKAGE(OpenCL REQUIRED)
	
IF(NOT LIBRARY_OUTPUT_PATH)
	SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
ENDIF(NOT LIBRARY_OUTPUT_PATH)

INCLUDE_DIRECTORIES(
	${sim_SOURCE_DIR}/src
	${mgr_INCLUDE_DIR}
	${Boost_INCLUDE_DIR}
	${OpenCL_INCLUDE_DIRS}
	${CMAKE_CURRENT_BINARY_DIR})

LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})

IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET(sim_TARGET_CPU_ARCH "64")
ELSEIF(CMAKE_SIZEOF_VOID_P EQUAL 4)
	SET(sim_TARGET_CPU_ARCH "32")
ELSE()
	MESSAGE(ERROR "Could not deduce target architecture: sizeof(void*) is neither 4 or 8...")
ENDIF()

SET(sim_SIMULATOR_VERSION "1")

IF(sim_SIMULATOR_VERSION STREQUAL "")
    MESSAGE(FATAL_ERROR "sim_SIMULATOR_VERSION not defined")
ENDIF()

ADD_LIBRARY(sim STATIC src/simbase.cpp src/simulator.cpp src/dummysim.cpp)
# MLS: Do need this next line?
TARGET_LINK_LIBRARIES(sim ${OPENCL_LIBRARIES})
SET_TARGET_PROPERTIES(sim PROPERTIES DEBUG_POSTFIX "d")
INSTALL(TARGETS sim DESTINATION sim/lib)
INSTALL(DIRECTORY include DESTINATION sim PATTERN ".svn" EXCLUDE)
